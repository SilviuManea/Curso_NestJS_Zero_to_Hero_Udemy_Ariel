Various Notes regarding specific lectures.

*************************************************************************

Lesson 5-62

Atack - http://localhost:3000/auth/test providing in the header the key as Authorization and key with the token as "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyaWVsIiwiaWF0IjoxNjIwMDQzNTgzLCJleHAiOjE2MjAwNDcxODN9.4GfZIxsBAcySEx3XNYDsuKfxOk2UYJjVkCDjpJ8YKNU"
If everythong works ok, thw back returns a lot of info, including the authorised user for the operation.

*************************************************************************

Lesson 5-63

In the next lecture we create the @GetUser() decorator like so:

export const GetUser = createParamDecorator((data, req): User => {
    return req.user;
});


However, since NestJS 7, this is not going to work. Please use this code instead:

export const GetUser = createParamDecorator((data, ctx: ExecutionContext): User => {
    const req = ctx.switchToHttp().getRequest();
    return req.user;
});

and make sure to import ExecutionContext at the top of the file:

import { createParamDecorator, ExecutionContext } from '@nestjs/common';

*************************************************************************

Lesson 8-75

Windows users only: Environment Variables

In the upcoming lectures I will set up environment variables via NPM scripts. This is not supported in Windows by default.

To overcome this, please install the win-node-env NPM package globally.



If you are using NPM:

npm install -g win-node-env

If you are using Yarn:

yarn global add win-node-env

After installing, you are good to proceed with the course. Good luck!

*************************************************************************

Lesson 8-76-77

npm install config

In production.yml we do not specify any credentiales or secret since we will provide it via environment variables.

By default if NODE ENV is not defined, the config will assume the ENVIRONMENT is Development

*************************************************************************